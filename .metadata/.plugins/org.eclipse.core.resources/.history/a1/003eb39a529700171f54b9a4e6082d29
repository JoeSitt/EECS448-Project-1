package scheduler;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.TreeSet;

/**
 * Keeps track of Events, allowing them to be added and summarized upon request.
 * 
 * @author cmaxcy
 *
 */

// TODO(cmaxcy):
// - Implement
// - Document
// - Test

public class Manager {
	
	public List<Event> eventList;
	
	
	private String dateFormat = "MM/dd/yyyy";
	
	public boolean addEvent(Event e) {
		return false;  // TEMP
	}
	
	/*
	 * Returns true if date exists and is formatted consistently with dateFormat.
	 * 
	 * Calendar usage derived from
	 * https://docs.oracle.com/javase/7/docs/api/java/util/Calendar.html
	 * https://stackoverflow.com/questions/226910/how-to-sanity-check-a-date-in-java
	 */
	public boolean isDateValid(String dateString, String dateFormat) {
		DateFormat df = new SimpleDateFormat(dateFormat);
		
		// check that date is formatted correctly
		
		
		
		
		
		return false;  // TEMP
	}
	
	/*
	 * Parse date from string. In the case in which a non-existent or un-parsable date is passed, null is returned.
	 */
	public Date parseDate(String dateString) {
		DateFormat df = new SimpleDateFormat(dateFormat);
		Date date;
		
		// Ensure date is formatted correctly
		try {
			date = df.parse(dateString);
		} catch(ParseException e) {
			return null;
		}
		
		Calendar dateChecker = Calendar.getInstance();
		dateChecker.setLenient(false);
		dateChecker.setTime(date);
		
		try {
			dateChecker.getTime();
		} catch(Exception e) {
			return null;
		}
		
		return null;  // TEMP
	}
	
	public boolean isDateValid(Date date) {
		Calendar dateChecker = Calendar.getInstance();
		dateChecker.setLenient(false);
		dateChecker.setTime(date);
		
		try {
			dateChecker.getTime();
		} catch(Exception e) {
			return false;
		}
		
		return false;  // TEMP
	}
	
	/*
	 * Returns whether or not passed date string matches class date format.
	 */
	// TODO(cmaxcy): Test
	public boolean isDateFormatted(String dateString) {
		try {
			Date date = df.parse(dateString);
		} catch (ParseException e) {
			return false;
		}
		return true;
	}
	
	public static void main(String[] args) {
		TreeSet<Event> mySet = new TreeSet<Event>();
		Event myEvent = new Event("", "", "");
		mySet.add(myEvent);
		
		System.out.println(mySet.isEmpty());
	}

}
