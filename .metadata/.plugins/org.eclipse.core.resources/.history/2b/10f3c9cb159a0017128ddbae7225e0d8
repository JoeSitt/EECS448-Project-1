package scheduler;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.TreeSet;

/**
 * Keeps track of Events, allowing them to be added and summarized upon request.
 * 
 * @author cmaxcy
 *
 */
public class Manager {
	
	private ArrayList<Event> events = new ArrayList<Event>();
	private String dateFormat = "MM/dd/yyyy";
	
	/*
	 * https://stackoverflow.com/questions/10817037/java-convert-treeset-to-list
	 */
	public ArrayList<Event> getEvents() {
		return events;
	}
	
	/*
	 * Returns whether or not the date string passed is valid.
	 * A date string is considered valid if it follows the passed format and exists.
	 */
	// TODO(cmaxcy): test
	public static boolean isDateStringValid(String dateString, String dateFormat) {
		
		SimpleDateFormat format = new SimpleDateFormat(dateFormat);
		format.setLenient(false);
		
		// Attempt parsing of dateString
		try {
			format.parse(dateString);
		} catch(Exception e) {
			return false;
		}
		
		// date string must be valid
		return true;
	}
	
	/*
	 * Parse date from string. String is expected to follow passed date format.
	 * Method will return null if format is not followed.
	 */
	// TODO(cmaxcy): test
	public static Date parseDate(String dateString, String dateFormat) {
		
		SimpleDateFormat format = new SimpleDateFormat(dateFormat);
		format.setLenient(false);
		Date date;
		
		// Attempt parsing of dateString
		try {
			date = format.parse(dateString);
		} catch(Exception e) {
			return null;
		}
		
		// date string must be valid
		return date;
	}
	
	/*
	 * Parse date from string. In the case in which a non-existent or un-parsable date is passed, null is returned.
	 * 
	 * https://stackoverflow.com/questions/226910/how-to-sanity-check-a-date-in-java
	 * 
	 */
	// TODO(cmaxcy): Test
	public Date parseDate(String dateString) {
		DateFormat df = new SimpleDateFormat(dateFormat);
		Date date;
		
		// Ensure date is formatted correctly
		try {
			date = df.parse(dateString);
		} catch(ParseException e) {
			return null;
		}
		
		Calendar dateChecker = Calendar.getInstance();
		dateChecker.setLenient(false);
		dateChecker.setTime(date);
		
		// Ensure date exists
		try {
			dateChecker.getTime();
		} catch(Exception e) {
			return null;
		}
		
		// Checks passed
		return date;
	}
	
	public void addEvent(Event event) {
		events.add(event);
	}
	
	public static void main(String[] args) {
//		Manager mrM = new Manager();
//		
//		Date date = mrM.parseDate("01/091/2017");
//		
//		Event event = new Event(date, "party");
//		
//		System.out.println(event.getDate());
//		
//		mrM.addEvent(event);
		
		String formatString = "MM/dd/yyyy";
		String sampleDate = "01/04s/2017";
		
		SimpleDateFormat format = new SimpleDateFormat(formatString);
		format.setLenient(false);
		
		try {
			System.out.println(format.parse(sampleDate));
		} catch (Exception e) {
			System.out.println("ERROR");
		}
	}

}
